/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.estacionesserver.model;

import com.jmoordb.core.annotation.Column;
import com.jmoordb.core.annotation.Entity;
import com.jmoordb.core.annotation.Id;
import com.jmoordb.core.annotation.enumerations.AutogeneratedActive;
import java.util.Date;
import java.util.Objects;

/**
 *
 * @author avbravo
 */
@Entity
public class Medicion {
    @Id(autogeneratedActive =AutogeneratedActive.ON, commentary = "Valor maximo 9,223,372,036,854,775,807" )
    private Long idmedicion;
    @Column
    private Long idestacion;
    @Column
    private Date fechahora;
    @Column
    private Double temperatura;    
    
    @Column
    private Double humedad;    

    public Medicion() {
    }

    public Medicion(Long idmedicion, Long idestacion, Date fechahora, Double temperatura, Double humedad) {
        this.idmedicion = idmedicion;
        this.idestacion = idestacion;
        this.fechahora = fechahora;
        this.temperatura = temperatura;
        this.humedad = humedad;
    }

    public Long getIdmedicion() {
        return idmedicion;
    }

    public void setIdmedicion(Long idmedicion) {
        this.idmedicion = idmedicion;
    }

    public Long getIdestacion() {
        return idestacion;
    }

    public void setIdestacion(Long idestacion) {
        this.idestacion = idestacion;
    }

    public Date getFechahora() {
        return fechahora;
    }

    public void setFechahora(Date fechahora) {
        this.fechahora = fechahora;
    }

    public Double getTemperatura() {
        return temperatura;
    }

    public void setTemperatura(Double temperatura) {
        this.temperatura = temperatura;
    }

    public Double getHumedad() {
        return humedad;
    }

    public void setHumedad(Double humedad) {
        this.humedad = humedad;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 23 * hash + Objects.hashCode(this.idmedicion);
        hash = 23 * hash + Objects.hashCode(this.idestacion);
        hash = 23 * hash + Objects.hashCode(this.fechahora);
        hash = 23 * hash + Objects.hashCode(this.temperatura);
        hash = 23 * hash + Objects.hashCode(this.humedad);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Medicion other = (Medicion) obj;
        if (!Objects.equals(this.idmedicion, other.idmedicion)) {
            return false;
        }
        if (!Objects.equals(this.idestacion, other.idestacion)) {
            return false;
        }
        if (!Objects.equals(this.fechahora, other.fechahora)) {
            return false;
        }
        if (!Objects.equals(this.temperatura, other.temperatura)) {
            return false;
        }
        return Objects.equals(this.humedad, other.humedad);
    }

    @Override
    public String toString() {
        return "Medicion{" + "idmedicion=" + idmedicion + ", idestacion=" + idestacion + ", fechahora=" + fechahora + ", temperatura=" + temperatura + ", humedad=" + humedad + '}';
    }
    
    
    
    
}
